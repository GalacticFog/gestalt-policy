image: galacticfog/docker-sbt:1.12

stages:
- test
- publish
- deploy

cache:
  key: "$CI_PIPELINE_ID"
  untracked: false

variables:
  DOCKER_IMG: "galacticfog/gestalt-policy"
  CI_URL: https://gtw1.demo.galacticfog.com/ci/update-provider

test:
  stage: test
  script:
    - cd policy
    - sbt clean update test docker:stage
  artifacts:
    expire_in: 30 minutes
    paths:
    - policy/target/docker/stage/

docker-publish:
  stage: publish
  services:
    - docker:dind
  script: 
    - cd policy
    - VERSION=$(grep "^version" build.sbt | sed 's/.*:=[ ]*//' | sed 's/"//g')
    - DOCKER_TAG=${CI_BUILD_TAG-$VERSION-${CI_BUILD_REF:0:8}}
    - cd target/docker/stage
    - echo building $DOCKER_IMG:$DOCKER_TAG
    - docker build -t $DOCKER_IMG:$DOCKER_TAG .
    - echo "Docker Login ..."
    - echo ${GF_DOCKER_PWD} | docker login --username ${GF_DOCKER_USER} --password-stdin
    - docker push     $DOCKER_IMG:$DOCKER_TAG
    - |
      if [ ${CI_COMMIT_REF_NAME} == "master" ]; then
         docker tag $DOCKER_IMG:$DOCKER_TAG $DOCKER_IMG:latest
         docker push $DOCKER_IMG:latest
      fi
    - docker rmi      $DOCKER_IMG:$DOCKER_TAG

github-publish:
  stage: publish
  script: 
    - git remote remove github || true
    - git remote add github https://$GITHUB_CREDENTIALS@github.com/GalacticFog/gestalt-policy.git
    - |
      if [ -z ${CI_BUILD_TAG} ]; then 
         git push github HEAD:$CI_BUILD_REF_NAME
      else 
         git push -f github $CI_BUILD_TAG
      fi
  only:
    - master
    - /^release-.*$/
    - tags
  artifacts:

.deploy_template: &deploy_to_test
  image: galacticfog/gitlab-updater
  stage: deploy
  environment: test
  tags: 
    - test-cluster
  script: 
    - cd policy
    - VERSION=$(grep "^version" build.sbt | sed 's/.*:=[ ]*//' | sed 's/"//g')
    - DOCKER_TAG=${CI_BUILD_TAG-$VERSION-${CI_BUILD_REF:0:8}}
    - http --check-status -a "$API_KEY":"$API_SECRET" --ignore-stdin $CI_URL image=$DOCKER_IMG:$DOCKER_TAG redeploy:=true provider_type=Policy git_ref=$CI_COMMIT_REF_NAME git_sha=$CI_COMMIT_SHA git_author="$GITLAB_USER_NAME"
  allow_failure: true
  artifacts:

auto-deploy-master:
  <<: *deploy_to_test
  only: 
    - master

manual-deploy-non-master:
  <<: *deploy_to_test
  except: 
    - master
  when: manual
