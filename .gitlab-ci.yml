stages:
- test
- publish
- deploy

cache:
  key: "$CI_PIPELINE_ID"
  untracked: false

variables:
  DOCKER_IMG: "galacticfog/gestalt-policy"

test:
  stage: test
  script:
    - cd policy
    - sbt clean update test docker:stage
    - cd target/docker/stage
    - echo building $DOCKER_IMG:$CI_PIPELINE_ID
    - docker build -t $DOCKER_IMG:$CI_PIPELINE_ID .

docker-publish:
  stage: publish
  script: 
    - cd policy
    - VERSION=$(grep "^version" build.sbt | sed 's/.*:=[ ]*//' | sed 's/"//g')
    - DOCKER_TAG=${CI_BUILD_TAG-$VERSION-${CI_BUILD_REF:0:8}}
    - echo publishing $DOCKER_IMG:$DOCKER_TAG
    - docker tag -f $DOCKER_IMG:$CI_PIPELINE_ID $DOCKER_IMG:$DOCKER_TAG
    - docker push   $DOCKER_IMG:$DOCKER_TAG
    - docker rmi    $DOCKER_IMG:$DOCKER_TAG
    - docker rmi    $DOCKER_IMG:$CI_PIPELINE_ID
  only:
    - master
    - /^release-.*$/
    - tags

github-publish:
  stage: publish
  script: 
    - git remote remove github || true
    - git remote add github https://$GITHUB_CREDENTIALS@github.com/GalacticFog/gestalt-policy.git
    - |
      if [ -z ${CI_BUILD_TAG} ]; then 
         git push github HEAD:$CI_BUILD_REF_NAME
      else 
         git push -f github $CI_BUILD_TAG
      fi
  only:
    - master
    - /^release-.*$/
    - tags

deploy-to-test:
  stage: deploy
  environment: test
  script: 
    - echo checking for access to marathon
    - curl http://marathon.mesos:8080/v2/apps/test-tasks/policy || true
